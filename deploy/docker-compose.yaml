version: '3.5'

networks:
  hack:

services:
  back_db:
    image: postgres
    container_name: back_db
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=user
      - POSTGRES_DB=db
      - POSTGRES_PASSWORD=password
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d db -U user -h localhost -p 5432" ]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - ../scripts/init_back.sql:/docker-entrypoint-initdb.d/create_tables.sql
    networks:
      - hack

  hack_backend:
    container_name: hack_back
    build:
      context: ..
      dockerfile: deploy/back/Dockerfile
    environment:
      - ENV=docker
    ports:
      - "8080:8080"
    networks:
      - hack

  cloud_db:
    image: postgres
    container_name: cloud_db
    ports:
      - "5433:5433"
    environment:
      - POSTGRES_USER=user
      - POSTGRES_DB=db
      - POSTGRES_PASSWORD=password
      - PGPORT=5433
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d db -U user -h localhost -p 5433" ]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - ../scripts/init_cloud.sql:/docker-entrypoint-initdb.d/create_tables.sql
    networks:
      - hack

  hack_cloud:
    container_name: hack_cloud
    build:
      context: ..
      dockerfile: deploy/cloud/Dockerfile
    environment:
      - ENV=docker
    ports:
      - "8081:8081"
    networks:
      - hack